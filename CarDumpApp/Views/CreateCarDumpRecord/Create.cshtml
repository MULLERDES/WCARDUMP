@model CarDumpApp.Models.CarDump

<div class="container">

    @{Html.RenderAction("FullMenu", "AdminPanel", null);}
    <h4>Create new </h4>
    @Html.HiddenFor(model => model.Id)
    @using(Html.BeginForm("Create", "CreateCarDumpRecord", FormMethod.Post, new { id = "FORM1" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-sm-2">
                <strong> Brand/Model</strong>
            </div>
            <div class="col-sm-4">
                <div id="ddlist-autobrand">
                    @{ Html.RenderAction("DDListAutoBrand", "CreateAutoBrand", new { mdl = Model?.AutoModel });}
                </div>
            </div>
            <div class="col-sm-2">
                <strong > ModuleType </strong>
                <button type="button" class="btn btn-info btn-sm" style="background-color:#1a6358;color:white; border-color:#1a6358" data-toggle="modal" data-target="#modal-moduleadd">Добавить если нет </button>
            </div>
            <div class="col-sm-4">
                <div id="ddlist-module">
                    @{ Html.RenderAction("DDListModule", "Module", new { mdl = Model?.Module });}
                </div>
            </div>
        </div>
        <hr/>
        <div class="row">
            <div class="col-sm-2">
                <strong> Year</strong>
            </div>
            <div class="col-sm-4">
                <div id="ddlist-autobrand">
                    @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="col-sm-2">
                <strong> MemoryType </strong>
                <button type="button" class="btn btn-info btn-sm" style="background-color:#1a6358;color:white; border-color:#1a6358" data-toggle="modal" data-target="#modal-memorytype">Добавить если нет </button>
            </div>
            <div class="col-sm-4">
                <div id="ddlist-memorytype">
                    @{ Html.RenderAction("DDListMemory", "MemoryType", new { memt = Model?.MemoryType });}
                </div>
            </div>
        </div>
        <hr/>
        <div class="row">
            <div class="col-sm-2">
                <strong> File access </strong>
                @Html.DropDownList("AccessLevelID", null, htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="col-sm-4">
                <input type="file" class="upl" fimg="file1" value="" />
                <input type="text" id="file1" name="file1" value="@ViewBag.file1" hidden />
            </div>
            <div class="col-sm-2">
                <strong> ModuleNumber</strong>
            </div>
            <div class="col-sm-4">
                <div id="ddlist-memorytype">
                    @Html.EditorFor(model => model.ModuleNumber, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-sm-2">
                <strong>  Description </strong>
            </div>
            <div class="col-sm-10">
                @Html.TextAreaFor(model => model.Description, new { cols = 200, @rows = 10, @style = "max-width:98%" })
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-sm-2">
                <strong>Label image</strong>
            </div>
            <div class="col-sm-4">
                <input type="file" class="pupl" fimg="img1" tagimg="imgpic1" />
                <input id="img1" type="text" name="img1" value="@Model.Pic1Url" hidden />
            </div>
            <div class="col-sm-6">
                <img id="imgpic1" class="img-thumbnail" style="width:330px;" src="/UploadFilesPics/@Model.Pic1Url" />
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-sm-2">
                <strong>Module picture</strong>
            </div>
            <div class="col-sm-4">
                <input type="file" class="pupl" fimg="img2" tagimg="imgpic2" />
                <input id="img2" type="text" name="img2" value="@Model.Pic2Url" hidden />
              
            </div>
            <div class=col-sm-6>
                <img id="imgpic2" class="img-thumbnail" style="width:330px; " src="/UploadFilesPics/@Model.Pic2Url" />

            </div>
        </div>
        <hr />
        <div class="row" hidden>
            <div class="col-sm-2">
                <strong> Image 3</strong>
            </div>
            <div class="col-sm-4">
                <input type="file" class="pupl" fimg="img3" />
                <input id="img3" type="text" name="img3" />
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-sm-4 col-sm-offset-4">
                <input type="button" value="Save record" onclick="SaveClick()" class="btn  btn-block" />
            </div>
        </div>
                        }


    @{Html.RenderAction("ModalWindow", "CreateAutoBrand"); }
    @{Html.RenderAction("ModalWindow", "Module"); }
    @{Html.RenderAction("ModalWindow", "MemoryType"); }
    <div>
    </div>

    <div class="modal fade" id="mValidationErrors" role="dialog">
        <div class="modal-dialog modal-sm">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Validations error</h4>
                </div>
                <div class="modal-body">

                    <ul id="mValidationString" style="color:red;"></ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Hide</button>
                </div>
            </div>

        </div>
    </div>

    <div class="modal fade" id="WaitDialog" role="dialog" style="top:25%;">
        <div class="modal-dialog modal-sm">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Processing...</h4>
                </div>

            </div>

        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        function SaveClick() {

            var err = true;
            var messArray = [];
            if ($('#DDListAutoModel').val() == null)
            { messArray.push("Auto model is not selected"); err = false; }

            if (($('#Year').val() < 1980) || ($('#Year').val() > 2020))
            { messArray.push("Year is not valid"); err = false; }

            if (($('#file1').val().length == 0))
            { messArray.push("File not selected"); err = false; }

            if ($('#ModuleNumber').val().length < 3)
            { messArray.push("Module number is not entered"); err = false; }

            if ($('#Description').val().length < 3)
            { messArray.push("Description is not entered"); err = false; }

            if (err == false) {
                $('#mValidationString').empty();
                for (var i = 0; i < messArray.length; i++) {
                    $('#mValidationString').append("<li>" + messArray[i] + "</li>")
                }
                $('#mValidationErrors').modal('show');
            }
            else {
                //$("#WaitDialog").modal('show');
              
                swal({
                    title: "Are you sure?",
                    text: "This action will change you data!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, save it!",
                    closeOnConfirm: false
                },
                function () {
                    swal("Savvin in pogress!", "on success page will redirect", "success");
                    $('#FORM1').submit();
                });


              
            }
        }

        $(function () {

            $('#DDListAutoBrand').change(function () {
                // получаем выбранный id
                var id = $(this).val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("ModelsByBrand","CreateAutoBrand")/' + id,
                    success: function (data) {
                        // заменяем содержимое присланным частичным представлением
                        $('#DDListAutoModel').replaceWith(data);
                    }
                });
            });
        })

        $('#submit').on('click', function (e) {
            e.preventDefault();
            var files = document.getElementById('uploadFile').files;
            if (files.length > 0) {
                if (window.FormData !== undefined) {
                    var data = new FormData();
                    for (var x = 0; x < files.length; x++) {
                        data.append("file" + x, files[x]);
                    }
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Upload", "Home")',
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function (result) {
                            alert(result);
                        },
                        error: function (xhr, status, p3) {
                            alert(xhr.responseText);
                        }
                    });
                } else {
                    alert("Браузер не поддерживает загрузку файлов HTML5!");
                }
            }
        });

        function aupload(_filedata, destinput, acturl) {
            //alert(destinput);
            $.ajax({
                type: "POST",
                url: acturl,
                contentType: false,
                processData: false,
                data: _filedata,
                success: function (result) {

                    $('#' + destinput).attr('value', result);
                    //alert($('#'+destinput).attr('value'));
                },
                error: function (xhr, status, p3) {
                    alert(xhr.responseText);
                }
            });
        }

        function picuoload(_filedata, destinput,destimg, acturl) {
            //alert(destinput);
            $.ajax({
                type: "POST",
                url: acturl,
                contentType: false,
                processData: false,
                data: _filedata,
                success: function (result) {

                    $('#' + destinput).attr('value', result);
                    $('#' + destimg).attr('src', '/UploadFilesPics/'+result);
                    //alert($('#'+destinput).attr('value'));
                },
                error: function (xhr, status, p3) {
                    alert(xhr.responseText);
                }
            });
        }

        $(".upl").change(function () {
            var files = this.files;

            if (files.length > 0) {
                if (window.FormData !== undefined) {
                    var data = new FormData();
                    for (var x = 0; x < files.length; x++) {
                        data.append("file" + x, files[x]);
                    }
                    aupload(data, $(this).attr('fimg'), '@Url.Action("Upload", "CreateCarDumpRecord")');
                }
            }
        });
        $(".pupl").change(function () {
            var files = this.files;
            if (files.length > 0) {
                if (window.FormData !== undefined) {
                    var data = new FormData();
                    for (var x = 0; x < files.length; x++) {
                        data.append("file" + x, files[x]);
                    }
                    picuoload(data, $(this).attr('fimg'), $(this).attr('tagimg'), '@Url.Action("UploadPic", "CreateCarDumpRecord")');
                }
            }
        });
    </script>
}
