@model CarDumpApp.Models.CarObject

@using(Html.BeginForm("Edit", "CarObjectsManage", null, FormMethod.Post, new { @id = "CarObjectEditorForm" }))
{
    @Html.HiddenFor(model => model.Id, new { @mid = "coid" })
    @*@Html.AntiForgeryToken()*@
    <div style="margin-top:15px;"class="container">
        <div style="padding:5px;" class="row">
            <div class="col-sm-2">
                @Html.Label("Brand", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-sm-4">
                @Html.DropDownList("DDListAutoBrand", null, htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="col-sm-2">
                @Html.Label("Transmission", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-sm-4">
                @Html.DropDownList("TransmissionID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TransmissionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div style="padding:5px;" class="row">
            <div class="col-sm-2">
                @Html.Label("Model", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-sm-4">
                @Html.DropDownList("AutoModelID", null, htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="col-sm-2">
                @Html.LabelFor(model => model.Odometr, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.Odometr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Odometr, "", new { @class = "text-danger" })
            </div>
        </div>    

        <div style="padding:5px;" class="row">
            <div class="col-sm-2">
                @Html.Label("newModel", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-sm-4">
                <input type="text" name="NewModelName" value="" class="form-control" />
            </div>
            <div class="col-sm-2">
                @Html.LabelFor(model => model.Odometr2, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.Odometr2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Odometr2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div style="padding:5px;"class="row">
            <div class="col-sm-2">
                @Html.Label("Year", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="col-sm-2">
                @Html.LabelFor(model => model.EngineCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.EngineCapacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EngineCapacity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div style="padding:5px;" class="row">
            <div class="col-sm-2">
                @Html.LabelFor(model => model.FuelTypeID, "FuelTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-sm-4">
                @Html.DropDownList("FuelTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FuelTypeID, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-2">
                @Html.LabelFor(model => model.MetricID, "MetricID", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-sm-4">
                @Html.DropDownList("MetricID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MetricID, "", new { @class = "text-danger" })
            </div>
        </div>
<hr />
        <div class="row">
            <div class="col-sm-2">
                 @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
 <hr />
    </div>
    
  

    @*<div class="container" >
          <div class="form-group" hidden>
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>*@
            @*<input type="submit" value="Sub" />*@
}




<script type="text/javascript">
    $(function () {
        //$("[mid='coid']").val(444);
        //alert($("[mid='coid']").val());
    });

    function CarObjectsSubmt() {
        var url = '@Url.Action("Edit", "CarObjectsManage")';
        var ret = 0;
        $.ajaxSetup({ async: false });
        $.ajax({
            type: "POST",
            url: url,
            data: $("#CarObjectEditorForm").serialize(), // serializes the form's elements.
            success: function (data) {
                $("[mid='coid']").val(data);

            }
            ,
            error: function (xhr, status, p3) {
                alert(xhr.responseText);
            }
        });
        //alert('value ='+$("[mid='coid']").val());
        ret = $("[mid='coid']").val();
        return ret;
    }


    $("#CarObjectEditorForm").submit(function (e) {
        e.preventDefault();
        CarObjectsSubmt();
    });


    $(function () {
        $('#DDListAutoBrand').change(function () {

            var id = $(this).val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("ModelsByBrandE","CreateAutoBrand")/' + id,
                success: function (data) {

                    $('#AutoModelID').replaceWith(data);
                },
                error: function (xhr, status, p3) {
                    alert(xhr.responseText);
                }
            });
        });
    })
</script>
